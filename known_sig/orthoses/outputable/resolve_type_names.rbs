module Orthoses
  module Outputable
    class ResolveTypeNames
      @loader: Orthoses::_Call
      def initialize: (Orthoses::_Call loader) -> void
      def call: () -> Orthoses::store

      private

      type entry = RBS::Environment::ModuleEntry | RBS::Environment::ClassEntry | RBS::Environment::InterfaceEntry

      def entry_and_members: (RBS::Environment, RBS::TypeName) -> ([
        RBS::Environment::ModuleEntry | RBS::Environment::ClassEntry,
        ::Array[(::RBS::AST::Members::t | ::RBS::AST::Declarations::t)]
      ] | [
        RBS::Environment::InterfaceEntry,
        ::Array[::RBS::AST::Declarations::Interface::member]
      ] | nil)
      def content_header: (entry) -> String
      def class_header: (::RBS::AST::Declarations::Class) -> String
      def module_header: (::RBS::AST::Declarations::Module) -> String
      def interface_header: (::RBS::AST::Declarations::Interface) -> String

      module WriterCopy
        def name_and_args: (::RBS::TypeName, ::Array[::RBS::Types::t]) -> String
        def name_and_params: (::RBS::TypeName, ::Array[::RBS::AST::TypeParam]) -> String
      end
      include WriterCopy
    end
  end
end
